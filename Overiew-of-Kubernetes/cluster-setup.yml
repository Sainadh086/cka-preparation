
cluster:
  - Lets first setup one master and one worker, later we can add multiple worker nodes

Note:
  - I am using below config
  - os: Ubuntu
  - container engine: crio
  - kubernetes version: 1.31.3


crio install steps:
  - VERSION=1.31.3
  - wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
  - sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin
  - rm -f crictl-$VERSION-linux-amd64.tar.gz

crio-update-config:
  - add below line to config in runtime block
  - cgroup_manager = "systemd"
  - sudo systemctl enable crio
  - sudo systemctl restart crio

adding-kube-repo:
  - sudo apt-get install -y apt-transport-https ca-certificates curl gpg
  - curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  - echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
  - sudo apt-get update
  - sudo apt-get install -y kubelet kubeadm

iptables-setup-for-flannel:
  - sudo modprobe br_netfilter
  - echo "br_netfilter" | sudo tee -a /etc/modules-load.d/modules.conf
  - echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

kubelet:
  - sudo systemctl enable --now kubelet

kubeadm:
  - starting the kubeadm control plane
  - kubeadm init --pod-network-cidr=10.240.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem
  - you will get a kubeadm join command over here, copy it and keep it another file, this command needs to be run on worker nodes
  - example: kubeadm join 10.0.0.183:6443 --token 1nplvi.1yu4obsm5lniyrmc --discovery-token-ca-cert-hash sha256:e0d806ccc968d5cedc6d986e76dce8e03c51da6374242fd2f1b6c20ec7b4b5e0
  - We can use the join command to join our worker nodes, so that kubelet can communicate with control plane.


deploy-overlay-network:
  - download flannel manifest
  - curl -O https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  - update your network cidr in net-conf in above file and apply
  - kubectl create -f kube-flannel.yml

generate users:
  - kubeadm can generate user config for connecting to kubernetes.

Nodes-ips:
  master: 10.0.0.183
  worker1: 10.0.0.231
